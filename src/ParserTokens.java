// Output created by jacc on Tue Apr 05 16:46:13 IST 2022

interface ParserTokens {
    int ENDINPUT = 0;
    int ADD_ASSIGN = 1;
    int AND_ASSIGN = 2;
    int AND_OP = 3;
    int AUTO = 4;
    int BREAK = 5;
    int CASE = 6;
    int CHAR = 7;
    int CONST = 8;
    int CONTINUE = 9;
    int DEC_OP = 10;
    int DEFAULT = 11;
    int DIV_ASSIGN = 12;
    int DO = 13;
    int DOUBLE = 14;
    int ELLIPSIS = 15;
    int ELSE = 16;
    int ENUM = 17;
    int EQ_OP = 18;
    int EXTERN = 19;
    int FLOAT = 20;
    int FOR = 21;
    int F_CONSTANT = 22;
    int GE_OP = 23;
    int GOTO = 24;
    int IDENTIFIER = 25;
    int IF = 26;
    int INC_OP = 27;
    int INT = 28;
    int I_CONSTANT = 29;
    int LEFT_ASSIGN = 30;
    int LEFT_OP = 31;
    int LE_OP = 32;
    int LONG = 34;
    int MOD_ASSIGN = 35;
    int MUL_ASSIGN = 36;
    int NE_OP = 39;
    int OR_ASSIGN = 48;
    int OR_OP = 49;
    int PTR_OP = 50;
    int REGISTER = 51;
    int RETURN = 52;
    int RIGHT_ASSIGN = 53;
    int RIGHT_OP = 54;
    int SHORT = 55;
    int SIGNED = 56;
    int SIZEOF = 57;
    int STATIC = 64;
    int STRING_LITERAL = 65;
    int STRUCT = 66;
    int SUB_ASSIGN = 67;
    int SWITCH = 68;
    int TYPEDEF = 69;
    int TYPE_NAME = 70;
    int UNION = 71;
    int UNSIGNED = 72;
    int VOID = 73;
    int VOLATILE = 74;
    int WHILE = 75;
    int XOR_ASSIGN = 76;
    int error = 77;
    // '!' (code=33)
    // '%' (code=37)
    // '&' (code=38)
    // '(' (code=40)
    // ')' (code=41)
    // '*' (code=42)
    // '+' (code=43)
    // ',' (code=44)
    // '-' (code=45)
    // '.' (code=46)
    // '/' (code=47)
    // ':' (code=58)
    // ';' (code=59)
    // '<' (code=60)
    // '=' (code=61)
    // '>' (code=62)
    // '?' (code=63)
    // '[' (code=91)
    // ']' (code=93)
    // '^' (code=94)
    // '{' (code=123)
    // '|' (code=124)
    // '}' (code=125)
    // '~' (code=126)
}
